// Решение с использованием цикла

function sumTo(n) {
  let sum = 0;
  for (let i = 1; i <= n; i++) {
    sum += i;
  }
  return sum;
}

alert( sumTo(100) );


// Решение через рекурсию

function sumTo(n) {
  if (n == 1) return 1;
  return n + sumTo(n - 1);
}

alert( sumTo(100) );


/* Решение с помощью формулы 
  арифметической прогрессии */

function sumTo(n) {
  return n * (n + 1) / 2;
}

alert( sumTo(100) );


/*
Самый быстрый вариант решения - последний, 
так как здесь для любого числа n используются 
только три арифметические операции.

В то время как сложность алгоритма решения при помощи 
рекурсии или цикла будет зависеть от n. Эта переменная 
отвечает за количество операций сложения при таких подходах.

При этом самый медленный способ решения задачи - 
рекурсивный, так как в нём используются дополнительные 
вычислительные затраты на организацию вложенных вызовов.

Кроме того, при подсчёте sumTo(100000) рекурсивным способом 
возникают проблемы, связанные с ограничением на максимальный размер стека, 
который окажется в таком случае превышенным.

*/